name: Deploy to Prod

on:
  push:
    branches: publish_prod
  workflow_dispatch:

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
    - uses: actions/checkout@v2
      with:
        ref: publish_prod
        
    - name: ls
      run: ls ./kj-sourcesynapse/

      # Log into Azure
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZCREDENTIALS }}
   
    - name: pause trigger
      shell: pwsh
      run: |
        $triggersSynapseJson = az synapse trigger list --workspace-name kj-targetsynapse
        $triggersSynapseObject = $triggersSynapseJson | ConvertFrom-Json        
        $triggersSynapseObject | ForEach-Object { az synapse trigger stop --workspace-name kj-targetsynapse --name $_.name}
        Write-Output "::set-output name=TRIGGER_STATUS::" + $triggersSynapseObject
      id: pausing-triggers

    - name: Run Synapse Deployment
      uses: Azure/Synapse-workspace-deployment@V1.2.2
      with:
        TargetWorkspaceName: 'kj-targetsynapse'
        TemplateFile: './kj-sourcesynapse/TemplateForWorkspace.json'
        ParametersFile: './kj-sourcesynapse/ProdTemplateParametersForWorkspace.json'
        OverrideArmParameters: './kj-sourcesynapse/ProdTemplateParametersForWorkspace.json'
        environment: 'Azure Public'
        resourceGroup: 'kja-rg'
        clientId: ${{ secrets.CLIENTID }}
        clientSecret: ${{ secrets.CLIENTSECRET }}
        subscriptionId: "23b3554b-c081-418d-b674-b21c29fa1a13"
        tenantId: "6c637512-c417-4e78-9d62-b61258e4b619"

#     - name: start triggers
#       shell: pwsh
#       run: |
#         $triggersSynapseJson = az synapse trigger list --workspace-name kj-targetsynapse
#         $triggersSynapseObject = $triggersSynapseJson | ConvertFrom-Json
#         $triggersSynapseObject | ForEach-Object { az synapse trigger start --workspace-name kj-targetsynapse --name $_.name}

    - name: start proper triggers
      shell: pwsh
      run: |
        steps.pausing-triggers.outputs.TRIGGER_STATUS | ForEach-Object { IF($_.properties.runtimeState -eq "Started") { az synapse trigger start --workspace-name kj-targetsynapse --name $_.name } }
